openapi: 3.0.0
info:
  title: booking ticket order  Domain API
  version: v1
  contact:
    email: shysunder@gmail.com
    name: shyam sharma
paths:

  /order-svc/v1/orders/initiate:
    post:
      tags:
        - orders initiate
      summary: >-
        orders initiate
      operationId: 'orders initiate"'
      requestBody:
        description: The request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordernIntiateUpsertRequest'
      responses:
        '201':
          $ref: '#/components/responses/201Response'
        '400':
           $ref: '#/components/responses/BadRequest'
        '401':
           $ref: '#/components/responses/Unautherize'
        '404':
          $ref: '#/components/responses/RecordNotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
           $ref: '#/components/responses/ServerError'

  /order-svc/v1/orders/process:
    post:
      tags:
        - orders process
      summary: >-
        orders process
      operationId: 'orders process"'
      requestBody:
        description: The request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderProcessUpsertRequest'
      responses:
        '201':
          $ref: '#/components/responses/201Response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unautherize'
        '404':
          $ref: '#/components/responses/RecordNotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    ordernIntiateUpsertRequest:
      $ref: "../schemas/requests/ordernItiateUpsertRequest.yaml"
    orderProcessUpsertRequest:
      $ref: "../schemas/requests/orderProcessUpsertRequest.yaml"


    ProblemDetails:
      $ref: "../schemas/error/ProblemDetails.yaml"
    ValidationProblemDetails:
       $ref: "../schemas/error/ValidationProblemDetails.yaml"

  responses:
  # HTTP Server Responses
    orderInitiateUpsertResponse:
       $ref: "../schemas/response/orderInitiateUpsertResponse.yaml"
    201Response:
       $ref: "../httpresponse/201.yaml"
    Unautherize:
       $ref: "../httpresponse/401.yaml"
    ServerError:
       $ref: "../httpresponse/500.yaml"
    RecordNotFound:
      $ref: "../httpresponse/404.yaml"
    BadRequest:
      $ref: "../httpresponse/400.yaml"
    MethodNotAllowed:
      $ref: "../httpresponse/405.yaml"

# Security Schema for authentication or autherization  
  securitySchemes:
      bearerAuth: # arbitrary name for the security scheme
        type: http
        scheme: bearer
        bearerFormat: JWT
      oAuth2AllGrant:
        type: oauth2
        description: For more information, see https://xxx.com/docs/oauth2/requests
        flows: 
          implicit:
            authorizationUrl: https://xxxx.com/oauth2/authorize
            scopes:
              read: Grant read-only access to all your data except for the account and user info
              write: Grant write-only access to all your data except for the account and user info
              profile: Grant read-only access to the account and user info only
      oAuth2Read:
        type: oauth2
        description: For more information, see https://xxx.com/docs/oauth2/requests
        flows: 
          implicit:
            authorizationUrl: https://xxxx.com/oauth2/authorize
            scopes:
              read: Grant read-only access to all your data except for the account and user info

security:
  - bearerAuth: []
  - oAuth2AllGrant: []
  - oAuth2Read: []
      